@font-face {
    font-family: lato;
    font-style:normal;
    font-weight:200;
    src:url(../images/fonts/Lato-Light.ttf) format('truetype');
}

:root {
    --color-white: #ffffff;
    --color-red: #eb4d4c;
    --color-grey: #5f5e5e;
    --color-light-grey: #b9b9b9;
    --color-pink: #e1a1ac;
}

body {
    font-family: 'lato';
    color: var(--color-grey);
}

.bs-tooltip-bottom .tooltip-arrow::before, .bs-tooltip-auto[data-popper-placement^=bottom] .tooltip-arrow::before {
    border-width: 0rem 0.5rem 0.5rem 0.5rem;
    border-bottom-color: var(--color-pink);
}
.bs-tooltip-top .tooltip-arrow::before, .bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow::before {
    border-width: 0.5rem 0.5rem 0 0.5rem;
    border-top-color: var(--color-pink);
}
.bs-tooltip-end .tooltip-arrow::before, .bs-tooltip-auto[data-popper-placement^=right] .tooltip-arrow::before {
    border-width: 0.5rem 0.5rem 0.5rem 0;
    border-right-color: var(--color-pink);
}
.tooltip-inner {
    font-size: 1.5em;
    opacity: 1;
    color: var(--color-grey);
    border: var(--color-pink) solid 2px;
    background-color: var(--color-white);
    border-radius: 12px;
}
  
.game-block,
.new-game {
    position: absolute;
    margin-left: auto;
    margin-right: auto;
    left: 0;
    right: 0;
}

.new-game {
    top:3vh; 
}

.game-block {
    top:11vh;
}

.card {
    background-color: transparent;
          border: none;
}

.card-player {
    height: 35vh;
}

.card-dice {
    height: 40vh;
    z-index: 100;
}

.control {
    height: 100%;
}

.btn,
.btn-check:focus+.btn, 
.btn:focus {
    outline: 0;
    box-shadow: none;
}

.background {
    width: 100vw;
    top: 0;
    left: 0;
    height: 100vh;
    position: absolute;
    z-index: 0;
}

.background div {
    flex: 1;
}

.background div.active {
    background-color: var(--color-light-grey);
    opacity: 30%;
} 

main {
    z-index: 1;
    position: relative;
}

.mute {
    position: absolute;
    top: 1vh;
    left: 1vw;
}


.pink {
    color: var(--color-pink);
    margin: 0.5rem;
    text-align: center;
}

.text {
     font-size: 4em;
}

.accolade {
    color: var(--color-pink);
    line-height: 1;
    font-size: 6em;
}

svg.pink {
    width: 20px;
}

.pink path {
    color: var(--color-pink);
}

.player {
    font-size: 3em;
    position: relative;
}

.edit-button1 {
    left: -20px;
}

.edit-button2 {
    right: -20px;
}

.mark {
    align-items: center;
    position: absolute;
    top: 50%;
    height: 20px;
    background: var(--color-red);
    border-radius: 50%;
    width: 20px;
}

.active-mark1 {
    transform: translate(50%,-50%);
}

.active-mark2 {
    transform: translate(-150%,-50%);
}

.player:not(.active) {
    color: var(--color-light-grey);
}

.player:not(.active) .active-mark1,
.player:not(.active) .active-mark2 {
    visibility: hidden;
}

.dice {
    width: 7vw;
    background: var(--color-white);
    box-shadow: 10px 10px 15px var(--color-light-grey);
    
}

.dice-dots {
    color: var(--color-red); 
}

.red,
.red p {
    font-size: 1.5em;
    background-color: var(--color-red);
    color: var(--color-white);
}

.red p:first-child {
    color: var(--color-grey); 
    font-size: 1em;
}

.svg-demo {
    width: 20px;
}

.announcement {
    position: fixed;
    top: 5px;
    font-size: 2em;
    color: var(--color-grey); 
    white-space: nowrap;
    animation: announce 15s linear infinite;
}

@keyframes announce {
    0% {
        transform: translate3d(100vw,0,0);
    }
    100% {
        transform: translate3d(-20vw,0,0);
    }
}

.p1AnimatedScore,
.p2AnimatedScore {
    animation: anime-score 0.3s linear ;
}
 
 .p1AddingDice {
    animation: dice-p1 0.3s linear ;
 }
 
 .p2AddingDice {
    animation: dice-p2 0.3s linear ;
 }
 
@keyframes anime-score {
    0% {
        transform: translate3d(0,0,0);
    }
    50% {
        transform: translate3d(0, -62px, -135px);
    }
    100% {
        transform: translate3d(0,0,0);
    }
}

@media only screen and (max-width: 767px) {
    :root {
        --mov-Y-small: 7vh;
    }

    .p1AnimatedScore,
    .p1AddingDice {
        animation: small-p1 0.3s linear ;
    }

    .p2AnimatedScore, 
    .p2AddingDice {
        animation: small-p2 0.3s linear ;
    }
    
    body { 
       font-size: 0.5em; 
    }

    .card-dice {
        height: 8vh;
    }
 }

@keyframes dice-p1 {
    0% {
        transform: translate3d(0,0,0);
    }
    50% {
        transform: scale(0.5) translate3d(-30vw, 30vh, 1000px);
    }
    100% {
        transform: translate3d(0,0,0);
    }
}

@keyframes dice-p2 {
    0% {
        transform: translate3d(0,0,0);
    }
    50% {
        transform: scale(0.5) translate3d(30vw, 30vh, 1000px);
    }
    100% {
        transform: translate3d(0,0,0);
    }
}

@keyframes small-p1 {
    0% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(calc(var(--mov-Y-small) * -1));
    }
    100% {
        transform: translateY(0);
    }
}

@keyframes small-p2 {
    0% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(var(--mov-Y-small));
    }
    100% {
        transform: translateY(0);
    }
}

.firework {
    position: absolute;
    z-index: 3;
}

.explosion {
    position: absolute;
    left:-2px;
    bottom: 0;
    width: 4px;
    height: 80px;
    transform-origin: 50% 100%;
    overflow: hidden;
}

.explosion:nth-child(1) {
    transform: rotate(0deg) translateY(-15px);
}
.explosion:nth-child(2) {
    transform: rotate(30deg) translateY(-15px);
}
.explosion:nth-child(3) {
    transform: rotate(60deg) translateY(-15px);
}
.explosion:nth-child(4) {
    transform: rotate(90deg) translateY(-15px);
}
.explosion:nth-child(5) {
    transform: rotate(120deg) translateY(-15px);
}
.explosion:nth-child(6) {
    transform: rotate(150deg) translateY(-15px);
}
.explosion:nth-child(7) {
    transform: rotate(180deg) translateY(-15px);
}
.explosion:nth-child(8) {
    transform: rotate(210deg) translateY(-15px);
}
.explosion:nth-child(9) {
    transform: rotate(240deg) translateY(-15px);
}
.explosion:nth-child(10) {
    transform: rotate(270deg) translateY(-15px);
}
.explosion:nth-child(11) {
    transform: rotate(300deg) translateY(-15px);
}
.explosion:nth-child(12) {
    transform: rotate(330deg) translateY(-15px);
}

.explosion::before {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    top: 100%;
    height: 40px;
    background-color: var(--color-pink);
    animation: explosion 2s ease-in-out infinite;
}

@keyframes explosion {
    0% {
        top: 100%;
    }
    33%, 100%{
        top: -50%;
    }
}

#firework1 {
    left: 50%;
    top: 50%;
    transform: scale(1);
}

#firework1 .explosion::before {
    animation: explosion 3s ease-in-out infinite;
}

#firework2 {
    left: 20%;
    top: 40%;
    transform: scale(.8);
}

#firework2 .explosion::before {
    animation: explosion 2s ease-in-out infinite;
}

#firework3 {
    left: 40%;
    top: 60%;
    transform: scale(.4);
}

#firework3 .explosion::before {
    animation: explosion 2s ease-in-out infinite;
}

#firework4 {
    left: 70%;
    top: 20%;
    transform: scale(.2);
}

#firework4 .explosion::before {
    animation: explosion 1s ease-in-out infinite;
}

#firework5 {
    left: 30%;
    top: 80%;
    transform: scale(.5);
}

#firework5 .explosion::before {
    animation: explosion 2s ease-in-out infinite;
}

#firework6 {
    left: 90%;
    top: 20%;
    transform: scale(.9);
}

#firework6 .explosion::before {
    animation: explosion 1s ease-in-out infinite;
}
